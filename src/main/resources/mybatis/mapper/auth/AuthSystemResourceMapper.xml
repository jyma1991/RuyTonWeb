<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryt.web.dao.auth.AuthSystemResourceDao">
	<resultMap id="queryResultMap" type="com.ryt.web.entity.auth.AuthSystemResource">
		<result column="parentId" property="parentId" jdbcType="INTEGER" />
		<result column="sysResName" property="sysResName" jdbcType="VARCHAR" />
                <result column="dataTypeResource" property="dataTypeResource" jdbcType="INTEGER" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="userId" property="userId" jdbcType="INTEGER" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="sortId" property="sortId" jdbcType="INTEGER" />
		<result column="isDeleted" property="isDeleted" jdbcType="TINYINT" />
		<result column="operaterId" property="operaterId" jdbcType="INTEGER" />
		<result column="editedTime" property="editedTime" jdbcType="VARCHAR" />
		<result column="createdTime" property="createdTime" jdbcType="VARCHAR" />
	</resultMap>

	<select id="find" parameterType="org.durcframework.core.expression.ExpressionQuery"
		resultMap="queryResultMap">
		SELECT t.*
		FROM authSystemResource t
		<include refid="expressionBlock.where" />
		<choose>
			<when test="sortname == null">
				ORDER BY t.id desc
			</when>
			<otherwise>
				ORDER BY ${order}
			</otherwise>
		</choose>
		<if test="!isQueryAll">
			LIMIT
			#{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</select>


	<select id="findTotalCount" parameterType="org.durcframework.core.expression.ExpressionQuery"
		resultType="java.lang.Integer">
		SELECT count(*) FROM authSystemResource t
		<include refid="expressionBlock.where" />
	</select>

	<insert id="save" parameterType="com.ryt.web.entity.auth.AuthSystemResource"
    keyProperty="id" keyColumn="id" useGeneratedKeys="true"
    >
		INSERT INTO authSystemResource
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="parentId != null">
				`parentId`,
			</if>
			<if test="sysResName != null">
				`sysResName`,
			</if>
			<if test="dataTypeResource != null">
				`dataTypeResource`,
			</if>
			<if test="url != null">
				`url`,
			</if>
			<if test="id != null">
				`id`,
			</if>
			<if test="uuid != null">
				`uuid`,
			</if>
			<if test="userId != null">
				`userId`,
			</if>
			<if test="userName != null">
				`userName`,
			</if>
			<if test="sortId != null">
				`sortId`,
			</if>
			<if test="isDeleted != null">
				`isDeleted`,
			</if>
			<if test="operaterId != null">
				`operaterId`,
			</if>
			<if test="editedTime != null">
				`editedTime`,
			</if>
			<if test="createdTime != null">
				`createdTime`,
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="sysResName != null">
            #{sysResName,jdbcType=VARCHAR},
			</if>
			<if test="dataTypeResource != null">
				#{dataTypeResource,jdbcType=INTEGER},
			</if>
			<if test="url != null">
            #{url,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uuid != null">
            #{uuid,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
            #{userName,jdbcType=VARCHAR},
			</if>
			<if test="sortId != null">
				#{sortId,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
            #{isDeleted,jdbcType=TINYINT},
			</if>
			<if test="operaterId != null">
				#{operaterId,jdbcType=INTEGER},
			</if>
			<if test="editedTime != null">
            #{editedTime,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
            #{createdTime,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.ryt.web.entity.auth.AuthSystemResource">
		UPDATE authSystemResource
		<set>
			<if test="parentId != null">
				parentId = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="sysResName != null">
				sysResName = #{sysResName,jdbcType=VARCHAR},
			</if>
			<if test="dataTypeResource != null">
				dataTypeResource = #{dataTypeResource,jdbcType=INTEGER},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="uuid != null">
				uuid = #{uuid,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				userId = #{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="sortId != null">
				sortId = #{sortId,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				isDeleted = #{isDeleted,jdbcType=TINYINT},
			</if>
			<if test="operaterId != null">
				operaterId = #{operaterId,jdbcType=INTEGER},
			</if>
			<if test="editedTime != null">
				editedTime = #{editedTime,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				createdTime = #{createdTime,jdbcType=VARCHAR},
			</if>
		</set>
		WHERE id
		<if test="id != null">
			= #{id,jdbcType=INTEGER}
		</if>
	</update>

    <select id="get" resultMap="queryResultMap" parameterType="com.ryt.web.entity.auth.AuthSystemResource">
		SELECT t.*
		FROM authSystemResource t
		WHERE id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="del" parameterType="com.ryt.web.entity.auth.AuthSystemResource">
		DELETE FROM authSystemResource
		WHERE id =
		<if test="id != null">
			#{id,jdbcType=INTEGER}
		</if>
	</delete>

	<!-- 获取用户菜单SQL authSystemFunction:系统功能表,系统功能=资源+操作 authRolePermission:角色权限表,存放[角色-系统功能]对应关系 
		authRoleUsers:用户角色表,存放用户具有哪些角色 authSystemResource:系统资源,即菜单表 1. 子查询根据[角色权限表]和[用户角色表]过滤出用户的系统功能(主键sysFuncId) 
		2. 关联系统功能表,返回systemResourceId 3. 关联authSystemResource表,返回用户菜单 -->
	<select id="findUserMenu" resultMap="queryResultMap"
		parameterType="String">
		SELECT sr.* FROM authSystemResource sr
		INNER JOIN (
		SELECT t.id
		FROM authSystemResource t
		INNER JOIN
		(
		SELECT DISTINCT sf.`systemResourceId` FROM authSystemFunction sf INNER JOIN
		(
		SELECT DISTINCT rp.`sysFuncId` FROM `authRolePermission` rp INNER JOIN
		`authRoleUsers` ur ON rp.`roleId` = ur.`roleId`
		WHERE ur.`userName` = #{userName,jdbcType=VARCHAR}
		) sf2 ON sf.`id` = sf2.sysFuncId

		) tt ON t.`id` = tt.systemResourceId
		UNION
		SELECT t.parentId
		FROM authSystemResource t
		INNER JOIN
		(
		SELECT DISTINCT sf.`systemResourceId` FROM authSystemFunction sf INNER JOIN
		(
		SELECT DISTINCT rp.`sysFuncId` FROM `authRolePermission` rp INNER JOIN
		`authRoleUsers` ur ON rp.`roleId` = ur.`roleId`
		WHERE ur.`userName` = #{userName,jdbcType=VARCHAR}
		) sf2 ON sf.`id` = sf2.sysFuncId

		) tt ON t.`id` = tt.systemResourceId
		) t1 ON sr.`id` = t1.id
		ORDER BY sr.sortId ASC
	</select>
	<!-- ORDER BY sr.sysResourceId ASC -->
	
	<select id="findUserMenuByUId" resultMap="queryResultMap"
		parameterType="Integer">
		SELECT sr.* FROM authSystemResource sr
		INNER JOIN (
		SELECT t.id
		FROM authSystemResource t
		INNER JOIN
		(
		SELECT DISTINCT sf.`systemResourceId` FROM authSystemFunction sf INNER JOIN
		(
		SELECT DISTINCT rp.`sysFuncId` FROM `authRolePermission` rp INNER JOIN
		`authRoleUsers` ur ON rp.`roleId` = ur.`roleId`
		WHERE ur.`uId` = #{uId,jdbcType=INTEGER}
		) sf2 ON sf.`id` = sf2.sysFuncId

		) tt ON t.`id` = tt.systemResourceId
		UNION
		SELECT t.parentId
		FROM authSystemResource t
		INNER JOIN
		(
		SELECT DISTINCT sf.`systemResourceId` FROM authSystemFunction sf INNER JOIN
		(
		SELECT DISTINCT rp.`sysFuncId` FROM `authRolePermission` rp INNER JOIN
		`authRoleUsers` ur ON rp.`roleId` = ur.`roleId`
		WHERE ur.`uId` = #{uId,jdbcType=INTEGER}
		) sf2 ON sf.`id` = sf2.sysFuncId

		) tt ON t.`id` = tt.systemResourceId
		) t1 ON sr.`id` = t1.id
		ORDER BY sr.sortId ASC
	</select>
</mapper>