<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryt.web.dao.finance.FinanceChargeOrderDao">
	<resultMap id="queryResultMap" type="com.ryt.web.entity.finance.FinanceChargeOrder">
		<result column="productId" property="productId" jdbcType="INTEGER" />
		<result column="orderType" property="orderType" jdbcType="INTEGER" />
		<result column="quantity" property="quantity" jdbcType="INTEGER" />
		<result column="buyerEmail" property="buyerEmail" jdbcType="VARCHAR" />
		<result column="totalFee" property="totalFee" jdbcType="TIMESTAMP" />
		<result column="chargeAccountId" property="chargeAccountId"
			jdbcType="VARCHAR" />
		<result column="payStatus" property="payStatus" jdbcType="INTEGER" />
		<result column="payType" property="payType" jdbcType="INTEGER" />
		<result column="payTime" property="payTime" jdbcType="VARCHAR" />
		<result column="confirmUserId" property="confirmUserId"
			jdbcType="INTEGER" />
		<result column="confirmTime" property="confirmTime" jdbcType="VARCHAR" />
		<result column="studentId" property="studentId" jdbcType="INTEGER" />
		<result column="classId" property="classId" jdbcType="INTEGER" />
		<result column="schoolId" property="schoolId" jdbcType="INTEGER" />
		<result column="agentId" property="agentId" jdbcType="INTEGER" />
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="uuid" property="uuid" jdbcType="CHAR" />
		<result column="userId" property="userId" jdbcType="INTEGER" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="sortId" property="sortId" jdbcType="INTEGER" />
		<result column="isDeleted" property="isDeleted" jdbcType="TINYINT" />
		<result column="operaterId" property="operaterId" jdbcType="INTEGER" />
		<result column="editedTime" property="editedTime" jdbcType="VARCHAR" />
		<result column="createdTime" property="createdTime" jdbcType="VARCHAR" />
		<result column="tradeNo" property="tradeNo" jdbcType="VARCHAR" />
		<result column="prepayId" property="prepayId" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="financeOrderCollection"
		type="com.ryt.web.entity.finance.FinanceOrderCollection">
		<result column="agentId" property="agentId" jdbcType="INTEGER" />
		<result column="trueName" property="trueName" jdbcType="VARCHAR" />
		<result column="totalFee" property="totalFee" jdbcType="DECIMAL" />
		<result column="orderNum" property="orderNum" jdbcType="INTEGER" />
		<result column="schoolId" property="schoolId" jdbcType="INTEGER" />
	</resultMap>
	<select id="find" parameterType="org.durcframework.core.expression.ExpressionQuery"
		resultMap="queryResultMap">
		SELECT t.*
		FROM financeChargeOrder t
		<include refid="expressionBlock.where" />
		<choose>
			<when test="sortname == null">
				ORDER BY t.id desc
			</when>
			<otherwise>
				ORDER BY ${order}
			</otherwise>
		</choose>
		<if test="!isQueryAll">
			LIMIT
			#{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</select>


	<select id="findTotalCount" parameterType="org.durcframework.core.expression.ExpressionQuery"
		resultType="java.lang.Integer">
		SELECT count(*) FROM financeChargeOrder t
		<include refid="expressionBlock.where" />
	</select>

	<insert id="save" parameterType="com.ryt.web.entity.finance.FinanceChargeOrder"
		keyProperty="id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO financeChargeOrder
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="productId != null">
				`productId`,
			</if>
			<if test="orderType != null">
				`orderType`,
			</if>
			<if test="quantity != null">
				`quantity`,
			</if>
			<if test="buyerEmail != null">
				`buyerEmail`,
			</if>
			<if test="totalFee != null">
				`totalFee`,
			</if>
			<if test="chargeAccountId != null">
				`chargeAccountId`,
			</if>
			<if test="payStatus != null">
				`payStatus`,
			</if>
			<if test="payType != null">
				`payType`,
			</if>
			<if test="payTime != null">
				`payTime`,
			</if>
			<if test="confirmUserId != null">
				`confirmUserId`,
			</if>
			<if test="confirmTime != null">
				`confirmTime`,
			</if>
			<if test="studentId != null">
				`studentId`,
			</if>
			<if test="classId != null">
				`classId`,
			</if>
			<if test="schoolId != null">
				`schoolId`,
			</if>
			<if test="agentId != null">
				`agentId`,
			</if>
			<if test="id != null">
				`id`,
			</if>
			<if test="uuid != null">
				`uuid`,
			</if>
			<if test="userId != null">
				`userId`,
			</if>
			<if test="userName != null">
				`userName`,
			</if>
			<if test="sortId != null">
				`sortId`,
			</if>
			<if test="isDeleted != null">
				`isDeleted`,
			</if>
			<if test="operaterId != null">
				`operaterId`,
			</if>
			<if test="editedTime != null">
				`editedTime`,
			</if>
			<if test="createdTime != null">
				`createdTime`,
			</if>
			<if test="tradeNo != null">
				`tradeNo`,
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="productId != null">
				#{productId,jdbcType=INTEGER},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=INTEGER},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=INTEGER},
			</if>
			<if test="buyerEmail != null">
				#{buyerEmail,jdbcType=VARCHAR},
			</if>
			<if test="totalFee != null">
				#{totalFee,jdbcType=TIMESTAMP},
			</if>
			<if test="chargeAccountId != null">
				#{chargeAccountId,jdbcType=VARCHAR},
			</if>
			<if test="payStatus != null">
				#{payStatus,jdbcType=INTEGER},
			</if>
			<if test="payType != null">
				#{payType,jdbcType=INTEGER},
			</if>
			<if test="payTime != null">
				#{payTime,jdbcType=VARCHAR},
			</if>
			<if test="confirmUserId != null">
				#{confirmUserId,jdbcType=INTEGER},
			</if>
			<if test="confirmTime != null">
				#{confirmTime,jdbcType=VARCHAR},
			</if>
			<if test="studentId != null">
				#{studentId,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				#{classId,jdbcType=INTEGER},
			</if>
			<if test="schoolId != null">
				#{schoolId,jdbcType=INTEGER},
			</if>
			<if test="agentId != null">
				#{agentId,jdbcType=INTEGER},
			</if>
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uuid != null">
				#{uuid,jdbcType=CHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="sortId != null">
				#{sortId,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=TINYINT},
			</if>
			<if test="operaterId != null">
				#{operaterId,jdbcType=INTEGER},
			</if>
			<if test="editedTime != null">
				#{editedTime,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				#{createdTime,jdbcType=VARCHAR},
			</if>
			<if test="tradeNo != null">
				#{tradeNo,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.ryt.web.entity.finance.FinanceChargeOrder">
		UPDATE financeChargeOrder
		<set>
			<if test="productId != null">
				productId = #{productId,jdbcType=INTEGER},
			</if>
			<if test="orderType != null">
				orderType = #{orderType,jdbcType=INTEGER},
			</if>
			<if test="quantity != null">
				quantity = #{quantity,jdbcType=INTEGER},
			</if>
			<if test="buyerEmail != null">
				buyerEmail = #{buyerEmail,jdbcType=VARCHAR},
			</if>
			<if test="totalFee != null">
				totalFee = #{totalFee,jdbcType=TIMESTAMP},
			</if>
			<if test="chargeAccountId != null">
				chargeAccountId = #{chargeAccountId,jdbcType=VARCHAR},
			</if>
			<if test="payStatus != null">
				payStatus = #{payStatus,jdbcType=INTEGER},
			</if>
			<if test="payType != null">
				payType = #{payType,jdbcType=INTEGER},
			</if>
			<if test="payTime != null">
				payTime = #{payTime,jdbcType=VARCHAR},
			</if>
			<if test="confirmUserId != null">
				confirmUserId = #{confirmUserId,jdbcType=INTEGER},
			</if>
			<if test="confirmTime != null">
				confirmTime = #{confirmTime,jdbcType=VARCHAR},
			</if>
			<if test="studentId != null">
				studentId = #{studentId,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				classId = #{classId,jdbcType=INTEGER},
			</if>
			<if test="schoolId != null">
				schoolId = #{schoolId,jdbcType=INTEGER},
			</if>
			<if test="agentId != null">
				agentId = #{agentId,jdbcType=INTEGER},
			</if>
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="uuid != null">
				uuid = #{uuid,jdbcType=CHAR},
			</if>
			<if test="userId != null">
				userId = #{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="sortId != null">
				sortId = #{sortId,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				isDeleted = #{isDeleted,jdbcType=TINYINT},
			</if>
			<if test="operaterId != null">
				operaterId = #{operaterId,jdbcType=INTEGER},
			</if>
			<if test="editedTime != null">
				editedTime = #{editedTime,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				createdTime = #{createdTime,jdbcType=VARCHAR},
			</if>
			<if test="tradeNo != null">
				tradeNo = #{tradeNo,jdbcType=VARCHAR},
			</if>
			<if test="prepayId != null">
				prepayId = #{prepayId,jdbcType=VARCHAR},
			</if>
		</set>
		WHERE id
		<if test="id != null">
			= #{id,jdbcType=INTEGER}
		</if>
	</update>

	<select id="get" resultMap="queryResultMap"
		parameterType="com.ryt.web.entity.finance.FinanceChargeOrder">
		SELECT t.*
		FROM financeChargeOrder t
		WHERE id =
		#{id,jdbcType=INTEGER}
	</select>

	<delete id="del" parameterType="com.ryt.web.entity.finance.FinanceChargeOrder">
		UPDATE financeChargeOrder
		<set>
			isDeleted = 1
		</set>
		WHERE id =
		<if test="id != null">
			#{id,jdbcType=INTEGER}
		</if>
	</delete>

	<select id="getAgentFinanceOrder" resultMap="financeOrderCollection"
		parameterType="java.lang.String">
		SELECT s.*,u.trueName from (SELECT t.agentId as
		agentId,sum(t.totalFee) as totalFee,count(t.agentId) as orderNum
		FROM financeChargeOrder t
		WHERE t.isDeleted = 0
		GROUP BY t.agentId) s,user u
		WHERE s.agentId = u.id
		<choose>
			<when test="sortName == null">
				ORDER BY agentId desc
			</when>
			<otherwise>
				ORDER BY ${sortName} ${sortOrder}
			</otherwise>
		</choose>
	</select>

	<select id="getSchoolFinanceOrder" resultMap="financeOrderCollection"
		parameterType="java.lang.String">
		SELECT s.*,u.schoolName from (SELECT t.schoolId as
		schoolId,sum(t.totalFee) as totalFee,count(t.schoolId) as orderNum
		FROM financeChargeOrder t
		WHERE t.isDeleted = 0
		AND t.agentId = #{agentId,jdbcType=INTEGER}
		GROUP BY t.schoolId) s,scSchool u
		WHERE s.schoolId = u.schoolId
		<choose>
			<when test="sortName == null">
				ORDER BY schoolId desc
			</when>
			<otherwise>
				ORDER BY ${sortName} ${sortOrder}
			</otherwise>
		</choose>
	</select>

	<select id="getClassFinanceOrder" resultMap="financeOrderCollection"
		parameterType="java.lang.String">
		SELECT s.*,u.className from (SELECT t.classId as
		classId,sum(t.totalFee) as totalFee,count(t.classId) as orderNum
		FROM financeChargeOrder t
		WHERE t.isDeleted = 0
		AND t.schoolId = #{schoolId,jdbcType=INTEGER}
		GROUP BY t.classId) s,scClass u
		WHERE s.classId = u.id
		<choose>
			<when test="sortName == null">
				ORDER BY classId desc
			</when>
			<otherwise>
				ORDER BY ${sortName} ${sortOrder}
			</otherwise>
		</choose>
	</select>
</mapper>